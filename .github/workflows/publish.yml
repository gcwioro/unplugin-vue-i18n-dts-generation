name: Publish to npm

on:
  push:
    branches:
      - 'release/**'   # publish alpha on pushes to git-flow release branches
    tags:
      - 'v*.*.*'       # publish stable on semver tags (e.g., v1.2.3)
  workflow_dispatch:

jobs:
  release:
    name: Publish stable (tagged release)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Node sets up npm auth from NODE_AUTH_TOKEN when registry-url is provided
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          # If your package is scoped, uncomment the next line and set your scope:
          # scope: '@your-scope'

      # (Optional hardening) Ensure ~/.npmrc exists even if repo .npmrc overrides things
      - name: Configure npm auth (defensive)
        run: |
          printf "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}\n" > ~/.npmrc
          npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm ci
      - name: Lint
        run: npm run lint
      - name: Type Check
        run: npm run typecheck
      - name: Test
        run: npm test -- --run
      - name: Build
        run: npm run build

      - name: Publish (stable)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # For scoped public packages, ensure access flag
          npm publish --access public
          # If you want SLSA provenance (npm v10+), use:
          # npm publish --access public --provenance

  alpha-release:
    name: Publish alpha (git-flow release/*)
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Always configure Node + npm auth for publish, even if you also install Bun
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          # scope: '@your-scope'  # uncomment if needed

      # (Optional) If you truly need Bun for any scripts, keep it.
      # Otherwise you can remove this step.
      - name: Setup Bun (optional)
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # (Optional hardening) Ensure ~/.npmrc exists
      - name: Configure npm auth (defensive)
        run: |
          printf "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}\n" > ~/.npmrc
          npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm ci
      - name: Lint
        run: npm run lint
      - name: Type Check
        run: npm run typecheck
      - name: Test
        run: npm test -- --run
      - name: Build
        run: npm run build

      # Derive an alpha pre-release version from the base version in package.json
      # Example: 1.4.0 -> 1.4.0-alpha.123  (123 = GITHUB_RUN_NUMBER)
      - name: Set alpha version (no git tag/commit)
        shell: bash
        run: |
          BASE_VERSION=$(node -p "require('./package.json').version.split('-')[0]")
          PRERELEASE_VERSION="${BASE_VERSION}-alpha.${GITHUB_RUN_NUMBER}"
          echo "Setting pre-release version to ${PRERELEASE_VERSION}"
          npm --no-git-tag-version version "${PRERELEASE_VERSION}"

      - name: Publish (alpha dist-tag)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --tag alpha
